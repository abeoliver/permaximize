# PERMAXIMIZE BACKEND
# Abraham Oliver, 2021
# AWS SAM Specification

AWSTemplateFormatVersion: 2010-09-09
Description: >-
  backend
Transform:
- AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: nodejs14.x
    Timeout: 180
    MemorySize: 128
    Environment:
      Variables:
        DB_TABLE_NAME: Games

Resources:
  ApiGatewayIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: 'Allow'
            Principal:
              Service:
                - 'apigateway.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: PermaximizeAPILambdaAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'lambda:*'
                Resource: '*'

  SocketAPI:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: PermaximizeSocketAPI
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"

  ProdDeploy:
    Type: AWS::ApiGatewayV2::Deployment
    Properties:
      ApiId: !Ref SocketAPI

  ProdStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      ApiId: !Ref SocketAPI
      DeploymentId: !Ref ProdDeploy


  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    DependsOn:
      - ConnectIntegration
    Properties:
      ApiId: !Ref SocketAPI
      RouteKey: "$connect"
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectIntegration

  ConnectHandler:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/game.connectHandler
      Description: Websocket connection function

  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - ConnectHandler
    Properties:
      ApiId: !Ref SocketAPI
      Description: Test Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationMethod: POST
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ConnectHandler.Arn}/invocations

  ApiGatewayPermissionConnect:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SocketAPI
      - ConnectHandler
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ConnectHandler
      Principal: apigateway.amazonaws.com


  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    DependsOn:
      - DefaultIntegration
    Properties:
      ApiId: !Ref SocketAPI
      RouteKey: "$default"
      OperationName: DefaultRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DefaultIntegration

  DefaultHandler:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/game.defaultHandler
      Description: Websocket default function
      # https://serverlessland.com/patterns/apigw-websocket-api-lambda
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - 'execute-api:ManageConnections'
            Resource:
              - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SocketAPI}/*'


  DefaultIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - DefaultHandler
    Properties:
      ApiId: !Ref SocketAPI
      Description: Test Default Integration
      IntegrationType: AWS_PROXY
      IntegrationMethod: POST
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DefaultHandler.Arn}/invocations

  DefaultResponse:
    Type: AWS::ApiGatewayV2::RouteResponse
    Properties:
      RouteId: !Ref DefaultRoute
      ApiId: !Ref SocketAPI
      RouteResponseKey: $default

  ApiGatewayPermissionDefault:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SocketAPI
      - DefaultHandler
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref DefaultHandler
      Principal: apigateway.amazonaws.com


  GamesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: Number
      TableName: Games

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "wss://${SocketAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/"